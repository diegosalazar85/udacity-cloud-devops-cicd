# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
  print_pipeline_id:
    description: "Prints Circle CI Workflow ID"
    steps:
      - run: |
          echo $CIRCLE_WORKFLOW_ID

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print_hello:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print Hello"
          command: "echo Hello"
  print_world:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Print World"
          command: "echo World"
  print_name:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Echo owner name from Environment Variable"
          command: |
            echo $OWNER
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          name: "Save Hello World to file"
          command: |
            echo "Hello World" > output.txt
      - persist_to_workspace:
          root: .
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Print output from file"
          command: |
            cat output.txt
  print_workflow_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
  throw_and_handle_error:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 1
      - run: 
          name: "On Error"
          command: |
            echo Hello Error!
          when: on_fail
  create_infrastructure:
    executor: aws-cli/default
    parameters:
      stack-name:
        description: Name of the CloudFormation stack
        type: string
    steps:
      - checkout
      - aws-cli/setup
      - run: 
          name: Deploy Cloudformation Template
          command: |
            aws cloudformation deploy \
            --template my-template.yml \
            --stack << parameters.stack-name >>

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # say-hello-workflow:
  #   jobs:
  #     - print_hello
  #     - print_world:
  #         requires:
  #           - print_hello
  # test-environment-variables:
  #   jobs:
  #     - print_name
  # hello-world-workspace:
  #   jobs:
  #     - save_hello_world_output
  #     - print_output_file:
  #         requires:
  #           - save_hello_world_output
  # print_workflow_id:
  #   jobs:
  #     - print_workflow_id
  # error_handling:
  #   jobs:
  #     - throw_and_handle_error
  aws-cli:
    jobs:
      - create_infrastructure:
          context: aws
          stack-name: My-Application